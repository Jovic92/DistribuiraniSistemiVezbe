package client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.5
 * 2017-03-28T23:10:13.954+02:00
 * Generated source version: 3.0.5
 * 
 */
@WebServiceClient(name = "StudentService", 
                  wsdlLocation = "http://localhost:8080/studentService/StudentPortTypes?wsdl",
                  targetNamespace = "http://new.webservice.namespace") 
public class StudentService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://new.webservice.namespace", "StudentService");
    public final static QName StudentPortTypesImplPort = new QName("http://new.webservice.namespace", "StudentPortTypesImplPort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8080/studentService/StudentPortTypes?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(StudentService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:8080/studentService/StudentPortTypes?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public StudentService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public StudentService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public StudentService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public StudentService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public StudentService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public StudentService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns StudentPortTypes
     */
    @WebEndpoint(name = "StudentPortTypesImplPort")
    public StudentPortTypes getStudentPortTypesImplPort() {
        return super.getPort(StudentPortTypesImplPort, StudentPortTypes.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns StudentPortTypes
     */
    @WebEndpoint(name = "StudentPortTypesImplPort")
    public StudentPortTypes getStudentPortTypesImplPort(WebServiceFeature... features) {
        return super.getPort(StudentPortTypesImplPort, StudentPortTypes.class, features);
    }

}
